######how to get inside a running container
docker run -d nginx ( creates a new container in detached mode )
docker ps -- displays the running containers, note down the container id
docker ps -a 
docker exec -it <container id> bash 

####################################################3
how to move into a container
--- docker run -it imagename  -----   ex - docker run -it ubuntu

how to gracefully exit the conatiner 
--- ctrl+p+q

Name and rename a conatiner 
docker run -itd --name nameyouwant imagename  --- ex -- docker run -itd --name saurabh nginx
docker rename oldname newname  ---- ex -- docker rename saurabh shubham

DEMO-5: Docker CLI Cheat Sheet
########To start running the commands pull any image from hub.docker.com and run it as a contaienr
docker search <image name> -- to search the docker images from command line
docker pull <image name> -- to pull a docker image from docker hub
docker images -- to display the images on your local machine
docker history < image name > -- to know the changes done to the image
docker inspect < image name > -- to view the detaied information in JSON output
docker rmi <image name> -- to remove a image from local machine
docker image prune -- to remove all unused images from local machine


#####how to run containers from a docker image
two ways we can run the images
interative mode ( -it )
detached mode ( -d )
docker run -d nginx ( always creates new container & detaches from the terminal you are working on ( goes in background process ))
docker run -it nginx bash ( always creates new container & gets inside the container )
docker ps -- to check all running containers
docker ps -a -- to check all running + exited/stopped containers
docker stop <container id> -- to stop a container
docker start <container id> -- to start a stopped container
docker restart <container id> -- to restart a container
docker inspect <container id> -- to view detailed information about the continaer in JSON format
docker rm <container id> -- to remove a stopped/exited container
docker rm -f <container id> -- to remove a container forcefully though it is in running state
docker container prune -- to remove all stopped/exited containers
docker rm -f $(docker ps -a) to remove all conatiner irrespective of anything 
docker stats --- details of the docker CPU and memory 
docker run -itd --name saurabh p 81:80 --restart always --memory 500M nginx
docker run -itd --name saurabh p 81:80 --restart always --cpu=".5"nginx



docker port mapping #######
docker run -itd --name saurabh -p portyouwant:defaultport imagename 

ex: 
docker run -itd --name saurabh -p 81:80 nginx

docker port forwarding *************************
docker run -itd --name saurabh -P ginx  ---- this will randomly assign port to the conatiner (32768 to 65535) default port ranfer for docker
it can randomly assign anything 

jump inside a running container ##############
docker exec -it name shellyouneedtouse
ex -- docker exec -it saurabh Bash



RESTART POLICY 
No
always 
unless stop 
on failure

------------------------------------------
docker compose 
docker compose -f filename up -d ---- to bring up or run the container 
docker compose -f filename down  ---- to bring down the container 

scaling up instance it could not be a case that we just want to run 1 image or machine at a time we need to scale up the service in one go so we 
docker compose command only example 
***** you have a compose yml file which has **** 

[root@docker devopstrainer1]# cat compose.yml
version: '3'
services:
  web:
    image: nginx
    ports:
      - "80"
    volumes:
      - /home/dockerlabs/dockerfiles/:/var/www/html
  app:
    image: tomcat
    ports:
      - "8080"
  db:
    image: redis
    ports:
      - "9080"

**************************
compose command with scale up
docker-compose -f compose.yml up --scale web=2 --scale app=3 --scale db=4  -d






